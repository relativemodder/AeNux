/*** Autogenerated by WIDL 10.17 from /home/runner/build_wine/wine/include/rometadataapi.idl - Do not edit ***/

#ifdef _WIN32
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 475
#endif
#include <rpc.h>
#include <rpcndr.h>
#endif

#ifndef COM_NO_WINDOWS_H
#include <windows.h>
#include <ole2.h>
#endif

#ifndef __rometadataapi_h__
#define __rometadataapi_h__

/* Forward declarations */

#ifndef __IMetaDataTables_FWD_DEFINED__
#define __IMetaDataTables_FWD_DEFINED__
typedef interface IMetaDataTables IMetaDataTables;
#ifdef __cplusplus
interface IMetaDataTables;
#endif /* __cplusplus */
#endif

/* Headers for imported files */

#include <unknwn.h>
#include <cor.h>

#ifdef __cplusplus
extern "C" {
#endif

/*****************************************************************************
 * IMetaDataTables interface
 */
#ifndef __IMetaDataTables_INTERFACE_DEFINED__
#define __IMetaDataTables_INTERFACE_DEFINED__

DEFINE_GUID(IID_IMetaDataTables, 0xd8f579ab, 0x402d, 0x4b8e, 0x82,0xd9, 0x5d,0x63,0xb1,0x06,0x5c,0x68);
#if defined(__cplusplus) && !defined(CINTERFACE)
MIDL_INTERFACE("d8f579ab-402d-4b8e-82d9-5d63b1065c68")
IMetaDataTables : public IUnknown
{
    virtual HRESULT STDMETHODCALLTYPE GetStringHeapSize(
        ULONG *size) = 0;

    virtual HRESULT STDMETHODCALLTYPE GetBlobHeapSize(
        ULONG *size) = 0;

    virtual HRESULT STDMETHODCALLTYPE GetGuidHeapSize(
        ULONG *size) = 0;

    virtual HRESULT STDMETHODCALLTYPE GetUserStringHeapSize(
        ULONG *size) = 0;

    virtual HRESULT STDMETHODCALLTYPE GetNumTables(
        ULONG *tables) = 0;

    virtual HRESULT STDMETHODCALLTYPE GetTableIndex(
        ULONG token,
        ULONG *idx) = 0;

    virtual HRESULT STDMETHODCALLTYPE GetTableInfo(
        ULONG idx,
        ULONG *row_size,
        ULONG *rows,
        ULONG *cols,
        ULONG *key_idx,
        const char **name) = 0;

    virtual HRESULT STDMETHODCALLTYPE GetColumnInfo(
        ULONG idx_tbl,
        ULONG idx_col,
        ULONG *offset,
        ULONG *col_size,
        ULONG *type,
        const char **name) = 0;

    virtual HRESULT STDMETHODCALLTYPE GetCodedTokenInfo(
        ULONG type,
        ULONG *tokens_len,
        const ULONG **tokens,
        const char **name) = 0;

    virtual HRESULT STDMETHODCALLTYPE GetRow(
        ULONG idx_tbl,
        ULONG idx_row,
        const BYTE *row) = 0;

    virtual HRESULT STDMETHODCALLTYPE GetColumn(
        ULONG idx_tbl,
        ULONG idx_col,
        ULONG idx_row,
        ULONG *val) = 0;

    virtual HRESULT STDMETHODCALLTYPE GetString(
        ULONG idx,
        const char **str) = 0;

    virtual HRESULT STDMETHODCALLTYPE GetBlob(
        ULONG idx,
        ULONG *size,
        const BYTE **blob) = 0;

    virtual HRESULT STDMETHODCALLTYPE GetGuid(
        ULONG idx,
        const GUID **guid) = 0;

    virtual HRESULT STDMETHODCALLTYPE GetUserString(
        ULONG idx,
        ULONG *size,
        const BYTE **blob) = 0;

    virtual HRESULT STDMETHODCALLTYPE GetNextString(
        ULONG idx,
        ULONG *next) = 0;

    virtual HRESULT STDMETHODCALLTYPE GetNextBlob(
        ULONG idx,
        ULONG *next) = 0;

    virtual HRESULT STDMETHODCALLTYPE GetNextGuid(
        ULONG idx,
        ULONG *next) = 0;

    virtual HRESULT STDMETHODCALLTYPE GetNextUserString(
        ULONG idx,
        ULONG *next) = 0;

};
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(IMetaDataTables, 0xd8f579ab, 0x402d, 0x4b8e, 0x82,0xd9, 0x5d,0x63,0xb1,0x06,0x5c,0x68)
#endif
#else
typedef struct IMetaDataTablesVtbl {
    BEGIN_INTERFACE

    /*** IUnknown methods ***/
    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
        IMetaDataTables *This,
        REFIID riid,
        void **ppvObject);

    ULONG (STDMETHODCALLTYPE *AddRef)(
        IMetaDataTables *This);

    ULONG (STDMETHODCALLTYPE *Release)(
        IMetaDataTables *This);

    /*** IMetaDataTables methods ***/
    HRESULT (STDMETHODCALLTYPE *GetStringHeapSize)(
        IMetaDataTables *This,
        ULONG *size);

    HRESULT (STDMETHODCALLTYPE *GetBlobHeapSize)(
        IMetaDataTables *This,
        ULONG *size);

    HRESULT (STDMETHODCALLTYPE *GetGuidHeapSize)(
        IMetaDataTables *This,
        ULONG *size);

    HRESULT (STDMETHODCALLTYPE *GetUserStringHeapSize)(
        IMetaDataTables *This,
        ULONG *size);

    HRESULT (STDMETHODCALLTYPE *GetNumTables)(
        IMetaDataTables *This,
        ULONG *tables);

    HRESULT (STDMETHODCALLTYPE *GetTableIndex)(
        IMetaDataTables *This,
        ULONG token,
        ULONG *idx);

    HRESULT (STDMETHODCALLTYPE *GetTableInfo)(
        IMetaDataTables *This,
        ULONG idx,
        ULONG *row_size,
        ULONG *rows,
        ULONG *cols,
        ULONG *key_idx,
        const char **name);

    HRESULT (STDMETHODCALLTYPE *GetColumnInfo)(
        IMetaDataTables *This,
        ULONG idx_tbl,
        ULONG idx_col,
        ULONG *offset,
        ULONG *col_size,
        ULONG *type,
        const char **name);

    HRESULT (STDMETHODCALLTYPE *GetCodedTokenInfo)(
        IMetaDataTables *This,
        ULONG type,
        ULONG *tokens_len,
        const ULONG **tokens,
        const char **name);

    HRESULT (STDMETHODCALLTYPE *GetRow)(
        IMetaDataTables *This,
        ULONG idx_tbl,
        ULONG idx_row,
        const BYTE *row);

    HRESULT (STDMETHODCALLTYPE *GetColumn)(
        IMetaDataTables *This,
        ULONG idx_tbl,
        ULONG idx_col,
        ULONG idx_row,
        ULONG *val);

    HRESULT (STDMETHODCALLTYPE *GetString)(
        IMetaDataTables *This,
        ULONG idx,
        const char **str);

    HRESULT (STDMETHODCALLTYPE *GetBlob)(
        IMetaDataTables *This,
        ULONG idx,
        ULONG *size,
        const BYTE **blob);

    HRESULT (STDMETHODCALLTYPE *GetGuid)(
        IMetaDataTables *This,
        ULONG idx,
        const GUID **guid);

    HRESULT (STDMETHODCALLTYPE *GetUserString)(
        IMetaDataTables *This,
        ULONG idx,
        ULONG *size,
        const BYTE **blob);

    HRESULT (STDMETHODCALLTYPE *GetNextString)(
        IMetaDataTables *This,
        ULONG idx,
        ULONG *next);

    HRESULT (STDMETHODCALLTYPE *GetNextBlob)(
        IMetaDataTables *This,
        ULONG idx,
        ULONG *next);

    HRESULT (STDMETHODCALLTYPE *GetNextGuid)(
        IMetaDataTables *This,
        ULONG idx,
        ULONG *next);

    HRESULT (STDMETHODCALLTYPE *GetNextUserString)(
        IMetaDataTables *This,
        ULONG idx,
        ULONG *next);

    END_INTERFACE
} IMetaDataTablesVtbl;

interface IMetaDataTables {
    CONST_VTBL IMetaDataTablesVtbl* lpVtbl;
};

#ifdef COBJMACROS
#ifndef WIDL_C_INLINE_WRAPPERS
/*** IUnknown methods ***/
#define IMetaDataTables_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
#define IMetaDataTables_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IMetaDataTables_Release(This) (This)->lpVtbl->Release(This)
/*** IMetaDataTables methods ***/
#define IMetaDataTables_GetStringHeapSize(This,size) (This)->lpVtbl->GetStringHeapSize(This,size)
#define IMetaDataTables_GetBlobHeapSize(This,size) (This)->lpVtbl->GetBlobHeapSize(This,size)
#define IMetaDataTables_GetGuidHeapSize(This,size) (This)->lpVtbl->GetGuidHeapSize(This,size)
#define IMetaDataTables_GetUserStringHeapSize(This,size) (This)->lpVtbl->GetUserStringHeapSize(This,size)
#define IMetaDataTables_GetNumTables(This,tables) (This)->lpVtbl->GetNumTables(This,tables)
#define IMetaDataTables_GetTableIndex(This,token,idx) (This)->lpVtbl->GetTableIndex(This,token,idx)
#define IMetaDataTables_GetTableInfo(This,idx,row_size,rows,cols,key_idx,name) (This)->lpVtbl->GetTableInfo(This,idx,row_size,rows,cols,key_idx,name)
#define IMetaDataTables_GetColumnInfo(This,idx_tbl,idx_col,offset,col_size,type,name) (This)->lpVtbl->GetColumnInfo(This,idx_tbl,idx_col,offset,col_size,type,name)
#define IMetaDataTables_GetCodedTokenInfo(This,type,tokens_len,tokens,name) (This)->lpVtbl->GetCodedTokenInfo(This,type,tokens_len,tokens,name)
#define IMetaDataTables_GetRow(This,idx_tbl,idx_row,row) (This)->lpVtbl->GetRow(This,idx_tbl,idx_row,row)
#define IMetaDataTables_GetColumn(This,idx_tbl,idx_col,idx_row,val) (This)->lpVtbl->GetColumn(This,idx_tbl,idx_col,idx_row,val)
#define IMetaDataTables_GetString(This,idx,str) (This)->lpVtbl->GetString(This,idx,str)
#define IMetaDataTables_GetBlob(This,idx,size,blob) (This)->lpVtbl->GetBlob(This,idx,size,blob)
#define IMetaDataTables_GetGuid(This,idx,guid) (This)->lpVtbl->GetGuid(This,idx,guid)
#define IMetaDataTables_GetUserString(This,idx,size,blob) (This)->lpVtbl->GetUserString(This,idx,size,blob)
#define IMetaDataTables_GetNextString(This,idx,next) (This)->lpVtbl->GetNextString(This,idx,next)
#define IMetaDataTables_GetNextBlob(This,idx,next) (This)->lpVtbl->GetNextBlob(This,idx,next)
#define IMetaDataTables_GetNextGuid(This,idx,next) (This)->lpVtbl->GetNextGuid(This,idx,next)
#define IMetaDataTables_GetNextUserString(This,idx,next) (This)->lpVtbl->GetNextUserString(This,idx,next)
#else
/*** IUnknown methods ***/
static inline HRESULT IMetaDataTables_QueryInterface(IMetaDataTables* This,REFIID riid,void **ppvObject) {
    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
}
static inline ULONG IMetaDataTables_AddRef(IMetaDataTables* This) {
    return This->lpVtbl->AddRef(This);
}
static inline ULONG IMetaDataTables_Release(IMetaDataTables* This) {
    return This->lpVtbl->Release(This);
}
/*** IMetaDataTables methods ***/
static inline HRESULT IMetaDataTables_GetStringHeapSize(IMetaDataTables* This,ULONG *size) {
    return This->lpVtbl->GetStringHeapSize(This,size);
}
static inline HRESULT IMetaDataTables_GetBlobHeapSize(IMetaDataTables* This,ULONG *size) {
    return This->lpVtbl->GetBlobHeapSize(This,size);
}
static inline HRESULT IMetaDataTables_GetGuidHeapSize(IMetaDataTables* This,ULONG *size) {
    return This->lpVtbl->GetGuidHeapSize(This,size);
}
static inline HRESULT IMetaDataTables_GetUserStringHeapSize(IMetaDataTables* This,ULONG *size) {
    return This->lpVtbl->GetUserStringHeapSize(This,size);
}
static inline HRESULT IMetaDataTables_GetNumTables(IMetaDataTables* This,ULONG *tables) {
    return This->lpVtbl->GetNumTables(This,tables);
}
static inline HRESULT IMetaDataTables_GetTableIndex(IMetaDataTables* This,ULONG token,ULONG *idx) {
    return This->lpVtbl->GetTableIndex(This,token,idx);
}
static inline HRESULT IMetaDataTables_GetTableInfo(IMetaDataTables* This,ULONG idx,ULONG *row_size,ULONG *rows,ULONG *cols,ULONG *key_idx,const char **name) {
    return This->lpVtbl->GetTableInfo(This,idx,row_size,rows,cols,key_idx,name);
}
static inline HRESULT IMetaDataTables_GetColumnInfo(IMetaDataTables* This,ULONG idx_tbl,ULONG idx_col,ULONG *offset,ULONG *col_size,ULONG *type,const char **name) {
    return This->lpVtbl->GetColumnInfo(This,idx_tbl,idx_col,offset,col_size,type,name);
}
static inline HRESULT IMetaDataTables_GetCodedTokenInfo(IMetaDataTables* This,ULONG type,ULONG *tokens_len,const ULONG **tokens,const char **name) {
    return This->lpVtbl->GetCodedTokenInfo(This,type,tokens_len,tokens,name);
}
static inline HRESULT IMetaDataTables_GetRow(IMetaDataTables* This,ULONG idx_tbl,ULONG idx_row,const BYTE *row) {
    return This->lpVtbl->GetRow(This,idx_tbl,idx_row,row);
}
static inline HRESULT IMetaDataTables_GetColumn(IMetaDataTables* This,ULONG idx_tbl,ULONG idx_col,ULONG idx_row,ULONG *val) {
    return This->lpVtbl->GetColumn(This,idx_tbl,idx_col,idx_row,val);
}
static inline HRESULT IMetaDataTables_GetString(IMetaDataTables* This,ULONG idx,const char **str) {
    return This->lpVtbl->GetString(This,idx,str);
}
static inline HRESULT IMetaDataTables_GetBlob(IMetaDataTables* This,ULONG idx,ULONG *size,const BYTE **blob) {
    return This->lpVtbl->GetBlob(This,idx,size,blob);
}
static inline HRESULT IMetaDataTables_GetGuid(IMetaDataTables* This,ULONG idx,const GUID **guid) {
    return This->lpVtbl->GetGuid(This,idx,guid);
}
static inline HRESULT IMetaDataTables_GetUserString(IMetaDataTables* This,ULONG idx,ULONG *size,const BYTE **blob) {
    return This->lpVtbl->GetUserString(This,idx,size,blob);
}
static inline HRESULT IMetaDataTables_GetNextString(IMetaDataTables* This,ULONG idx,ULONG *next) {
    return This->lpVtbl->GetNextString(This,idx,next);
}
static inline HRESULT IMetaDataTables_GetNextBlob(IMetaDataTables* This,ULONG idx,ULONG *next) {
    return This->lpVtbl->GetNextBlob(This,idx,next);
}
static inline HRESULT IMetaDataTables_GetNextGuid(IMetaDataTables* This,ULONG idx,ULONG *next) {
    return This->lpVtbl->GetNextGuid(This,idx,next);
}
static inline HRESULT IMetaDataTables_GetNextUserString(IMetaDataTables* This,ULONG idx,ULONG *next) {
    return This->lpVtbl->GetNextUserString(This,idx,next);
}
#endif
#endif

#endif


#endif  /* __IMetaDataTables_INTERFACE_DEFINED__ */

/* Begin additional prototypes for all interfaces */


/* End additional prototypes */

#ifdef __cplusplus
}
#endif

#endif /* __rometadataapi_h__ */
