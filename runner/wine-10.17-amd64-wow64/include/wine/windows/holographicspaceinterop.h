/*** Autogenerated by WIDL 10.17 from /home/runner/build_wine/wine/include/holographicspaceinterop.idl - Do not edit ***/

#ifdef _WIN32
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 475
#endif
#include <rpc.h>
#include <rpcndr.h>
#endif

#ifndef COM_NO_WINDOWS_H
#include <windows.h>
#include <ole2.h>
#endif

#ifndef __holographicspaceinterop_h__
#define __holographicspaceinterop_h__

/* Forward declarations */

#ifndef __IHolographicSpaceInterop_FWD_DEFINED__
#define __IHolographicSpaceInterop_FWD_DEFINED__
typedef interface IHolographicSpaceInterop IHolographicSpaceInterop;
#ifdef __cplusplus
interface IHolographicSpaceInterop;
#endif /* __cplusplus */
#endif

/* Headers for imported files */

#include <inspectable.h>

#ifdef __cplusplus
extern "C" {
#endif

/*****************************************************************************
 * IHolographicSpaceInterop interface
 */
#ifndef __IHolographicSpaceInterop_INTERFACE_DEFINED__
#define __IHolographicSpaceInterop_INTERFACE_DEFINED__

DEFINE_GUID(IID_IHolographicSpaceInterop, 0x5c4ee536, 0x6a98, 0x4b86, 0xa1,0x70, 0x58,0x70,0x13,0xd6,0xfd,0x4b);
#if defined(__cplusplus) && !defined(CINTERFACE)
MIDL_INTERFACE("5c4ee536-6a98-4b86-a170-587013d6fd4b")
IHolographicSpaceInterop : public IInspectable
{
    virtual HRESULT STDMETHODCALLTYPE CreateForWindow(
        HWND window,
        REFIID iid,
        void **holographic_space) = 0;

};
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(IHolographicSpaceInterop, 0x5c4ee536, 0x6a98, 0x4b86, 0xa1,0x70, 0x58,0x70,0x13,0xd6,0xfd,0x4b)
#endif
#else
typedef struct IHolographicSpaceInteropVtbl {
    BEGIN_INTERFACE

    /*** IUnknown methods ***/
    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
        IHolographicSpaceInterop *This,
        REFIID riid,
        void **ppvObject);

    ULONG (STDMETHODCALLTYPE *AddRef)(
        IHolographicSpaceInterop *This);

    ULONG (STDMETHODCALLTYPE *Release)(
        IHolographicSpaceInterop *This);

    /*** IInspectable methods ***/
    HRESULT (STDMETHODCALLTYPE *GetIids)(
        IHolographicSpaceInterop *This,
        ULONG *iidCount,
        IID **iids);

    HRESULT (STDMETHODCALLTYPE *GetRuntimeClassName)(
        IHolographicSpaceInterop *This,
        HSTRING *className);

    HRESULT (STDMETHODCALLTYPE *GetTrustLevel)(
        IHolographicSpaceInterop *This,
        TrustLevel *trustLevel);

    /*** IHolographicSpaceInterop methods ***/
    HRESULT (STDMETHODCALLTYPE *CreateForWindow)(
        IHolographicSpaceInterop *This,
        HWND window,
        REFIID iid,
        void **holographic_space);

    END_INTERFACE
} IHolographicSpaceInteropVtbl;

interface IHolographicSpaceInterop {
    CONST_VTBL IHolographicSpaceInteropVtbl* lpVtbl;
};

#ifdef COBJMACROS
#ifndef WIDL_C_INLINE_WRAPPERS
/*** IUnknown methods ***/
#define IHolographicSpaceInterop_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
#define IHolographicSpaceInterop_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHolographicSpaceInterop_Release(This) (This)->lpVtbl->Release(This)
/*** IInspectable methods ***/
#define IHolographicSpaceInterop_GetIids(This,iidCount,iids) (This)->lpVtbl->GetIids(This,iidCount,iids)
#define IHolographicSpaceInterop_GetRuntimeClassName(This,className) (This)->lpVtbl->GetRuntimeClassName(This,className)
#define IHolographicSpaceInterop_GetTrustLevel(This,trustLevel) (This)->lpVtbl->GetTrustLevel(This,trustLevel)
/*** IHolographicSpaceInterop methods ***/
#define IHolographicSpaceInterop_CreateForWindow(This,window,iid,holographic_space) (This)->lpVtbl->CreateForWindow(This,window,iid,holographic_space)
#else
/*** IUnknown methods ***/
static inline HRESULT IHolographicSpaceInterop_QueryInterface(IHolographicSpaceInterop* This,REFIID riid,void **ppvObject) {
    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
}
static inline ULONG IHolographicSpaceInterop_AddRef(IHolographicSpaceInterop* This) {
    return This->lpVtbl->AddRef(This);
}
static inline ULONG IHolographicSpaceInterop_Release(IHolographicSpaceInterop* This) {
    return This->lpVtbl->Release(This);
}
/*** IInspectable methods ***/
static inline HRESULT IHolographicSpaceInterop_GetIids(IHolographicSpaceInterop* This,ULONG *iidCount,IID **iids) {
    return This->lpVtbl->GetIids(This,iidCount,iids);
}
static inline HRESULT IHolographicSpaceInterop_GetRuntimeClassName(IHolographicSpaceInterop* This,HSTRING *className) {
    return This->lpVtbl->GetRuntimeClassName(This,className);
}
static inline HRESULT IHolographicSpaceInterop_GetTrustLevel(IHolographicSpaceInterop* This,TrustLevel *trustLevel) {
    return This->lpVtbl->GetTrustLevel(This,trustLevel);
}
/*** IHolographicSpaceInterop methods ***/
static inline HRESULT IHolographicSpaceInterop_CreateForWindow(IHolographicSpaceInterop* This,HWND window,REFIID iid,void **holographic_space) {
    return This->lpVtbl->CreateForWindow(This,window,iid,holographic_space);
}
#endif
#endif

#endif


#endif  /* __IHolographicSpaceInterop_INTERFACE_DEFINED__ */

/* Begin additional prototypes for all interfaces */

ULONG           __RPC_USER HWND_UserSize     (ULONG *, ULONG, HWND *);
unsigned char * __RPC_USER HWND_UserMarshal  (ULONG *, unsigned char *, HWND *);
unsigned char * __RPC_USER HWND_UserUnmarshal(ULONG *, unsigned char *, HWND *);
void            __RPC_USER HWND_UserFree     (ULONG *, HWND *);

/* End additional prototypes */

#ifdef __cplusplus
}
#endif

#endif /* __holographicspaceinterop_h__ */
