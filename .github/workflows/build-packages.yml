name: Build Packages

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to build (e.g., v1.9.0)'
        required: true
        default: 'v1.9.0'

jobs:
  build-deb:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            python3-venv \
            python3-dev \
            build-essential \
            fakeroot \
            dpkg-dev \
            debhelper \
            devscripts \
            libqt6gui6 \
            libqt6widgets6 \
            libqt6core6 \
            qt6-base-dev

      - name: Create virtual environment
        run: |
          python3 -m venv venv
          source venv/bin/activate
          pip install --upgrade pip
          pip install PyQt6==6.9.1 pyqt6-qt6==6.9.2 pyqt6-sip==13.10.2

      - name: Create DEB package structure
        run: |
          mkdir -p aenux-deb/DEBIAN
          mkdir -p aenux-deb/usr/bin
          mkdir -p aenux-deb/usr/share/aenux
          mkdir -p aenux-deb/usr/share/applications
          mkdir -p aenux-deb/usr/share/icons/hicolor/256x256/apps
          mkdir -p aenux-deb/usr/share/doc/aenux

      - name: Copy application files
        run: |
          cp -r . aenux-deb/usr/share/aenux/
          rm -rf aenux-deb/usr/share/aenux/.git
          rm -rf aenux-deb/usr/share/aenux/.github
          rm -rf aenux-deb/usr/share/aenux/aenux-deb
          chmod +x aenux-deb/usr/share/aenux/launch_aenux.sh

      - name: Create desktop entry
        run: |
          cat > aenux-deb/usr/share/applications/aenux.desktop << 'EOF'
          [Desktop Entry]
          Name=AeNux Loader
          Comment=Run Adobe After Effects using Wine on Linux
          Exec=/usr/share/aenux/launch_aenux.sh
          Icon=aenux
          Terminal=false
          Type=Application
          Categories=AudioVideo;Video;Graphics;
          Keywords=after;effects;adobe;wine;video;editing;
          EOF

      - name: Copy icon
        run: |
          if [ -f asset/logo.png ]; then
            cp asset/logo.png aenux-deb/usr/share/icons/hicolor/256x256/apps/aenux.png
          fi

      - name: Create control file
        run: |
          VERSION=${GITHUB_REF_NAME#v}
          cat > aenux-deb/DEBIAN/control << EOF
          Package: aenux
          Version: ${VERSION}
          Section: graphics
          Priority: optional
          Architecture: amd64
          Depends: python3, python3-venv, wine, winetricks, wget, unzip, cabextract
          Recommends: python3-pyqt6
          Maintainer: cutefishaep <cutefishaep@example.com>
          Description: AeNux - Adobe After Effects for Linux
           AeNux is a sophisticated Linux solution that enables seamless execution
           of Adobe After Effects through Wine and Winetricks. Designed for creative
           professionals who prefer Linux environments, this project bridges the gap
           between Windows-based creative software and Linux ecosystems.
           .
           Features:
           - Easy installation and setup
           - Wine integration with patches
           - Plugin management system
           - Modern Qt6 GUI
           - Cross-distribution compatibility
          EOF

      - name: Create changelog
        run: |
          VERSION=${GITHUB_REF_NAME#v}
          cat > aenux-deb/usr/share/doc/aenux/changelog << EOF
          aenux (${VERSION}) unstable; urgency=medium

            * Initial release
            * Qt6 GUI interface
            * Wine integration
            * Plugin management
            * Cross-platform compatibility

           -- cutefishaep <cutefishaep@example.com>  $(date -R)
          EOF
          gzip -9 aenux-deb/usr/share/doc/aenux/changelog

      - name: Create postinst script
        run: |
          cat > aenux-deb/DEBIAN/postinst << 'EOF'
          #!/bin/bash
          set -e
          
          # Update desktop database
          if command -v update-desktop-database >/dev/null 2>&1; then
            update-desktop-database /usr/share/applications
          fi
          
          # Update icon cache
          if command -v gtk-update-icon-cache >/dev/null 2>&1; then
            gtk-update-icon-cache -f -t /usr/share/icons/hicolor
          fi
          
          echo "AeNux installed successfully!"
          echo "You can now find it in your applications menu."
          
          exit 0
          EOF
          chmod 755 aenux-deb/DEBIAN/postinst

      - name: Create prerm script
        run: |
          cat > aenux-deb/DEBIAN/prerm << 'EOF'
          #!/bin/bash
          set -e
          
          # Kill any running AeNux processes
          pkill -f "run_qt6.py" || true
          pkill -f "AfterFX.exe" || true
          
          exit 0
          EOF
          chmod 755 aenux-deb/DEBIAN/prerm

      - name: Build DEB package
        run: |
          dpkg-deb --build aenux-deb
          mv aenux-deb.deb aenux_${GITHUB_REF_NAME#v}_amd64.deb

      - name: Upload DEB artifact
        uses: actions/upload-artifact@v4
        with:
          name: aenux-deb
          path: aenux_${GITHUB_REF_NAME#v}_amd64.deb

  build-appimage:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            python3-venv \
            python3-dev \
            build-essential \
            wget \
            fuse \
            libfuse2

      - name: Download AppImageKit
        run: |
          wget https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage
          chmod +x appimagetool-x86_64.AppImage

      - name: Create AppImage structure
        run: |
          mkdir -p aenux.AppDir/usr/bin
          mkdir -p aenux.AppDir/usr/share/aenux
          mkdir -p aenux.AppDir/usr/share/applications
          mkdir -p aenux.AppDir/usr/share/icons/hicolor/256x256/apps

      - name: Create virtual environment for AppImage
        run: |
          python3 -m venv aenux.AppDir/usr/share/aenux/venv
          source aenux.AppDir/usr/share/aenux/venv/bin/activate
          pip install --upgrade pip
          pip install PyQt6==6.9.1 pyqt6-qt6==6.9.2 pyqt6-sip==13.10.2

      - name: Copy application files
        run: |
          cp -r . aenux.AppDir/usr/share/aenux/
          rm -rf aenux.AppDir/usr/share/aenux/.git
          rm -rf aenux.AppDir/usr/share/aenux/.github
          rm -rf aenux.AppDir/usr/share/aenux/aenux.AppDir
          rm -rf aenux.AppDir/usr/share/aenux/aenux-deb
          chmod +x aenux.AppDir/usr/share/aenux/launch_aenux.sh

      - name: Create AppRun script
        run: |
          cat > aenux.AppDir/AppRun << 'EOF'
          #!/bin/bash
          set -e
          
          # Get the directory where AppRun is located
          APPDIR="$(dirname "$(readlink -f "${0}")")"
          
          # Set environment variables
          export QT_QPA_PLATFORM_PLUGIN_PATH="$APPDIR/usr/share/aenux/venv/lib/python3.12/site-packages/PyQt6/Qt6/plugins"
          export QT_QPA_PLATFORM="xcb"
          export PATH="$APPDIR/usr/bin:$PATH"
          
          # Change to the application directory
          cd "$APPDIR/usr/share/aenux"
          
          # Run the application
          exec "$APPDIR/usr/share/aenux/venv/bin/python" run_qt6.py "$@"
          EOF
          chmod +x aenux.AppDir/AppRun

      - name: Create desktop entry
        run: |
          cat > aenux.AppDir/aenux.desktop << 'EOF'
          [Desktop Entry]
          Name=AeNux Loader
          Comment=Run Adobe After Effects using Wine on Linux
          Exec=aenux
          Icon=aenux
          Terminal=false
          Type=Application
          Categories=AudioVideo;Video;Graphics;
          Keywords=after;effects;adobe;wine;video;editing;
          X-AppImage-Version=1.0.0
          X-AppImage-Name=AeNux
          X-AppImage-Comment=Adobe After Effects for Linux
          EOF

      - name: Copy icon
        run: |
          if [ -f asset/logo.png ]; then
            cp asset/logo.png aenux.AppDir/aenux.png
            cp asset/logo.png aenux.AppDir/usr/share/icons/hicolor/256x256/apps/aenux.png
          fi

      - name: Create AppImage
        run: |
          VERSION=${GITHUB_REF_NAME#v}
          ./appimagetool-x86_64.AppImage aenux.AppDir aenux-${VERSION}-x86_64.AppImage

      - name: Upload AppImage artifact
        uses: actions/upload-artifact@v4
        with:
          name: aenux-appimage
          path: aenux-${GITHUB_REF_NAME#v}-x86_64.AppImage

  create-release:
    needs: [build-deb, build-appimage]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Generate changelog
        run: |
          VERSION=${GITHUB_REF_NAME#v}
          cat > CHANGELOG.md << EOF
          # AeNux v${VERSION} Release Notes
          
          ## 🎉 What's New
          
          ### ✨ Features
          - **Modern Qt6 Interface**: Beautiful, responsive GUI built with PyQt6
          - **Easy Installation**: One-click installation with automatic dependency management
          - **Plugin Management**: Integrated plugin installation and management system
          - **Wine Integration**: Seamless Wine setup with automatic patching
          - **Cross-Distribution Support**: Works on Ubuntu, Debian, Elementary OS, and more
          
          ### 🛠️ Technical Improvements
          - **Virtual Environment**: Isolated Python environment for better compatibility
          - **Platform Plugin Fix**: Resolved Qt platform plugin issues on Linux
          - **Launcher Script**: Convenient launcher with proper environment setup
          - **Package Management**: Both .deb and .appimage packages available
          
          ### 📦 Package Formats
          - **DEB Package**: Native Debian/Ubuntu package with proper dependencies
          - **AppImage**: Portable application that runs on any Linux distribution
          
          ## 🚀 Installation
          
          ### DEB Package (Ubuntu/Debian)
          \`\`\`bash
          sudo dpkg -i aenux_${VERSION}_amd64.deb
          sudo apt-get install -f  # Install dependencies if needed
          \`\`\`
          
          ### AppImage (Any Linux)
          \`\`\`bash
          chmod +x aenux-${VERSION}-x86_64.AppImage
          ./aenux-${VERSION}-x86_64.AppImage
          \`\`\`
          
          ## 🔧 System Requirements
          
          - **OS**: Linux (Ubuntu 20.04+, Debian 11+, Elementary OS 6+, etc.)
          - **Python**: 3.8+ (included in packages)
          - **Wine**: 6.0+ (install separately)
          - **RAM**: 4GB minimum, 8GB recommended
          - **Storage**: 2GB free space
          
          ## 🐛 Known Issues
          
          - Hardware acceleration limited on some systems
          - Occasional UI flickering with certain plugins
          - Memory management issues on some distributions
          
          ## 📝 Changelog
          
          ### v${VERSION}
          - Initial release with Qt6 GUI
          - Wine integration and patching system
          - Plugin management interface
          - Cross-platform compatibility
          - Package management (DEB + AppImage)
          
          ---
          
          **Full Changelog**: https://github.com/cutefishaep/AeNux/compare/v${VERSION}...v${VERSION}
          EOF

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: AeNux v${GITHUB_REF_NAME#v}
          body_path: CHANGELOG.md
          files: |
            artifacts/aenux-deb/aenux_${GITHUB_REF_NAME#v}_amd64.deb
            artifacts/aenux-appimage/aenux-${GITHUB_REF_NAME#v}-x86_64.AppImage
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
