name: Create Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., v1.9.0)'
        required: true
        default: 'v1.9.0'

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Generate fancy changelog
        run: |
          VERSION=${GITHUB_REF_NAME:-${{ github.event.inputs.version }}
          echo "Generating changelog for version: $VERSION"
          
          # Get previous tag
          PREVIOUS_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
          echo "Previous tag: $PREVIOUS_TAG"
          
          # Generate changelog
          python3 scripts/generate-changelog.py "$VERSION" "$PREVIOUS_TAG" "HEAD"
          
          # Display changelog preview
          echo "=== CHANGELOG PREVIEW ==="
          head -50 CHANGELOG.md
          echo "..."

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Verify artifacts
        run: |
          echo "=== VERIFYING ARTIFACTS ==="
          ls -la artifacts/
          find artifacts/ -name "*.deb" -o -name "*.AppImage" | while read file; do
            echo "Found: $file"
            ls -lh "$file"
          done

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name || github.event.inputs.version }}
          name: AeNux ${{ github.ref_name || github.event.inputs.version }}
          body_path: CHANGELOG.md
          files: |
            artifacts/aenux-deb/aenux_${{ github.ref_name || github.event.inputs.version }}_amd64.deb
            artifacts/aenux-appimage/aenux-${{ github.ref_name || github.event.inputs.version }}-x86_64.AppImage
          draft: false
          prerelease: false
          generate_release_notes: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Post-release notification
        run: |
          VERSION=${GITHUB_REF_NAME:-${{ github.event.inputs.version }}
          echo "üéâ Release $VERSION created successfully!"
          echo "üì¶ DEB package: aenux_${VERSION#v}_amd64.deb"
          echo "üì¶ AppImage: aenux-${VERSION#v}-x86_64.AppImage"
          echo "üìù Changelog: Generated with fancy formatting"
